import { createTransport } from "nodemailer";
import { TEmailRequest } from "../interfaces/users";
import Mailgen from "mailgen";

class EmailService {
  async sendEmail({ to, subject, text }: TEmailRequest) {
    try {
      const transporter = createTransport({
        service: "hotmail",
        auth: {
          user: process.env.SMTP_USER, // Seu endere√ßo de e-mail
          pass: process.env.SMTP_PASS, // Sua senha
        },
      });

      await transporter.sendMail({
        from: "petlovers-app@hotmail.com",
        to,
        subject,
        html: text,
      });

      console.log("Email sent successfully");
    } catch (error: any) {
      console.error("Error sending email:", error.message);
      // Aqui voc√™ pode lidar com o erro da forma desejada, como logar, enviar um alerta, etc.
    }
  }

  resetPasswordTemplate(
    userEmail: string,
    userName: string,
    resetToken: string
  ) {
    const mailGenerator = new Mailgen({
      theme: "default",
      product: {
        name: "PetLovers",
        link: "https://petloverswebsite.netlify.app",
      },
    });

    const email = {
      body: {
        greeting: "Ol√°",
        signature: "Atenciosamente",
        name: userName,
        intro:
          "Voc√™ recebeu este e-mail porque foi recebido um pedido de redefini√ß√£o de senha para a sua conta.",
        action: {
          instructions: "Clique no bot√£o abaixo para redefinir sua senha:",
          button: {
            color: "#DC4D2F",
            text: "Redefinir sua senha",
            link: `https://petloverswebsite.netlify.app/resetPassword/${resetToken}`,
          },
        },
        outro:
          "Se voc√™ n√£o solicitou a redefini√ß√£o de senha, nenhuma a√ß√£o adicional √© necess√°ria de sua parte.",
      },
    };

    const emailBody = mailGenerator.generate(email);

    const emailTemplate = {
      to: userEmail,
      subject: "Modifica√ß√£o de senha",
      text: emailBody,
    };
    return emailTemplate;
  }

  petBirthdayTemplate(userEmail: string, userName: string, petName: string) {
    const mailGenerator = new Mailgen({
      theme: "salted",
      product: {
        name: "PetLovers",
        link: "https://petloverswebsite.netlify.app",
      },
    });

    const email = {
      body: {
        greeting: "Ol√°",
        signature: "Atenciosamente",
        name: userName,
        intro: `Desejamos um feliz anivers√°rio para ${petName} ! üéâüêæ`,
        outro:
          "Esperamos que voc√™s tenham um dia repleto de alegria e momentos especiais juntos.",
        action: {
          instructions: "Clique no bot√£o abaixo para visitar nosso site:",
          button: {
            color: "#DC4D2F",
            text: "PetLovers",
            link: `https://petloverswebsite.netlify.app`,
          },
        },
      },
    };

    const emailBody = mailGenerator.generate(email);

    const emailTemplate = {
      to: userEmail,
      subject: "Anivers√°rio do seu Pet",
      text: emailBody,
    };
    return emailTemplate;
  }

  vaccineReminderTemplate(
    userEmail: string,
    userName: string,
    petName: string,
    vaccineName: string,
    doseNumber: string,
    dueDate: string,
    nextDose: string
  ) {
    const mailGenerator = new Mailgen({
      theme: "cerberus",
      product: {
        name: "PetLovers",
        link: "https://petloverswebsite.netlify.app",
      },
    });

    const email = {
      body: {
        greeting: "Ol√°",
        signature: "Atenciosamente",
        name: userName,
        intro: `Lembrete de Vacina√ß√£o para ${petName} üêæ`,
        table: {
          data: [
            {
              item: "Vacina",
              descri√ß√£o: vaccineName,
            },
            {
              item: "J√° tomou:",
              descri√ß√£o: `${
                doseNumber === "refor√ßo anual"
                  ? doseNumber
                  : doseNumber + " dose"
              }`,
            },
            {
              item: "Pr√≥xima:",
              descri√ß√£o: `${
                nextDose === "refor√ßo anual" ? nextDose : nextDose + " dose"
              }`,
            },
            {
              item: "Data de Vencimento",
              descri√ß√£o: dueDate,
            },
          ],
          columns: {
            // Ajuste as larguras das colunas conforme necess√°rio
            customWidth: {
              item: "35%",
              description: "80%",
            },
            // Adicione mais propriedades de estilo se necess√°rio
          },
        },
        outro:
          "Por favor, n√£o se esque√ßa de dar a vacina ao seu querido pet antes da data de vencimento. A sa√∫de do seu animalzinho √© importante para n√≥s!",
        action: {
          instructions: "Clique no bot√£o abaixo para mais informa√ß√µes:",
          button: {
            color: "#DC4D2F",
            text: "Detalhes da Vacina√ß√£o",
            link: `https://petloverswebsite.netlify.app`,
          },
        },
      },
    };

    const emailBody = mailGenerator.generate(email);

    const emailTemplate = {
      to: userEmail,
      subject: `Lembrete de Vacina√ß√£o para ${petName}`,
      text: emailBody,
    };

    return emailTemplate;
  }

  medicationReminderTemplate(
    userEmail: string,
    userName: string,
    petName: string,
    medicationType: string,
    frequency: string,
    nextMedicationDate: string,
    description: string,
    date: string
  ) {
    const mailGenerator = new Mailgen({
      theme: "cerberus",
      product: {
        name: "PetLovers",
        link: "https://petloverswebsite.netlify.app",
      },
    });

    const email = {
      body: {
        greeting: "Ol√°",
        signature: "Atenciosamente",
        name: userName,
        intro: `Lembrete de Medicamento para ${petName} üêæ`,
        table: {
          data: [
            {
              item: "Medicamento",
              descri√ß√£o: medicationType.toUpperCase(),
            },
            {
              item: "Tomou em:",
              descri√ß√£o: date,
            },
            {
              item: "Frequ√™ncia:",
              descri√ß√£o: frequency,
            },
            {
              item: "Vencimento:",
              descri√ß√£o: nextMedicationDate,
            },
            {
              item: "Descri√ß√£o",
              descri√ß√£o: description,
            },
          ],
          columns: {
            // Ajuste as larguras das colunas conforme necess√°rio
            customWidth: {
              item: "35%",
              description: "80%",
            },
            // Adicione mais propriedades de estilo se necess√°rio
          },
        },
        outro:
          "Por favor, n√£o se esque√ßa de administrar o medicamento ao seu querido pet conforme as orienta√ß√µes. A sa√∫de do seu animalzinho √© importante para n√≥s!",
        action: {
          instructions: "Clique no bot√£o abaixo para mais informa√ß√µes:",
          button: {
            color: "#DC4D2F",
            text: "Atualize a carteirinha",
            link: `https://petloverswebsite.netlify.app`,
          },
        },
      },
    };

    const emailBody = mailGenerator.generate(email);

    const emailTemplate = {
      to: userEmail,
      subject: `Lembrete de Vacina√ß√£o para ${petName}`,
      text: emailBody,
    };

    return emailTemplate;
  }
}

const emailservice = new EmailService();

export { emailservice };
